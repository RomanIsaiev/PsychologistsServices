{"version":3,"file":"static/js/345.0d21040d.chunk.js","mappings":"yQAEaA,E,QAAaC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wD,iDCUvBC,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAMC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,GAAG,IAEzCI,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAME,UAAUC,KAAK,IAC5DC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwDL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAC9CG,GAASf,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMe,cAAcD,MAAM,IAC9DE,GAAsCX,EAAAA,EAAAA,WAAS,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAA9CE,EAAYD,EAAA,GAAEE,EAAaF,EAAA,IAElCG,EAAAA,EAAAA,YAAU,WACJtB,GACFF,GAASyB,EAAAA,EAAAA,MAEb,GAAG,CAACzB,EAAUE,IAEd,IASMwB,GAAsBC,EAAAA,EAAAA,GAAIrB,GAAWsB,MAAK,SAACC,EAAGC,GAClD,OAAQZ,GACN,IAAK,WACH,OAAOW,EAAEE,KAAKC,cAAcF,EAAEC,MAChC,IAAK,YACH,OAAOD,EAAEC,KAAKC,cAAcH,EAAEE,MAChC,IAAK,iBACH,OAAOD,EAAEG,eAAiBJ,EAAEI,eAC9B,IAAK,iBACH,OAAOJ,EAAEI,eAAiBH,EAAEG,eAC9B,IAAK,UACH,OAAOH,EAAEI,OAASL,EAAEK,OACtB,IAAK,cACH,OAAOL,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,EAEb,IAEMC,EAAkB,SAAAC,GACtBnB,EAAwBmB,GACxBvB,GAAe,EACjB,EAEMwB,EAAa,WACjBxB,GAAe,GACfI,EAAwB,KAC1B,EAEA,OACEqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,CACF,IAArBlC,EAAUmC,QACTC,EAAAA,EAAAA,KAAC/C,EAAU,CAAA6C,SAAC,gCAEZF,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAH,SAAA,EACEE,EAAAA,EAAAA,KAACE,EAAAA,EAAM,CACLC,OAAQvB,EACRwB,SA/CW,WACnBvB,GAAeD,EACjB,EA8CUyB,SA5CW,SAAA7B,GACnBlB,GAASgD,EAAAA,EAAAA,IAAU9B,IACnBK,GAAc,EAChB,KA2CQmB,EAAAA,EAAAA,KAACO,EAAAA,GAAgB,CAAAT,SACdd,EAAoBwB,KAAI,SAACd,EAAce,GAAK,OAC3CT,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAEThB,aAAcA,EACdiB,mBAAoBlB,GAFfgB,EAGL,SAKTvC,IACC8B,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAACT,OAAQjC,EAAa2C,QAASlB,EAAWG,UAC9CE,EAAAA,EAAAA,KAACc,EAAAA,EAAe,CACdpB,aAAcpB,EACduC,QAASlB,QAMrB,EClGe,SAASoB,IACtB,OACEf,EAAAA,EAAAA,KAAA,WAASH,UAAU,YAAWC,UAC5BE,EAAAA,EAAAA,KAAC3C,EAAa,KAGpB,C","sources":["components/FavoritesList/FavoritesList.styled.js","components/FavoritesList/FavoritesList.js","pages/Favorites.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoFavorite = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeFavorites } from '../../redux/psychologists/favoriteReducer';\nimport { PsychoItem } from 'components/PsychoItem/PsychoItem';\nimport Filter from 'components/Filter/Filter';\nimport { NoFavorite } from './FavoritesList.styled';\nimport { setSortBy } from '../../redux/psychologists/psychoReducer';\n\nimport { Modal } from 'components/Modal/Modal';\nimport { AppointmentForm } from 'components/AppointmentForm/AppointmentForm';\nimport { PsychoStyledList } from 'components/PsychoItem/PsychoItem.styled';\n\nexport const FavoritesList = () => {\n  const dispatch = useDispatch();\n\n  const uid = useSelector(state => state.auth.uid);\n\n  const favorites = useSelector(state => state.favorites.items);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedPsychologist, setSelectedPsychologist] = useState(null);\n  const sortBy = useSelector(state => state.psychologists.sortBy);\n  const [isFilterOpen, setFilterOpen] = useState(false);\n\n  useEffect(() => {\n    if (uid) {\n      dispatch(initializeFavorites());\n    }\n  }, [dispatch, uid]);\n\n  const toggleFilter = () => {\n    setFilterOpen(!isFilterOpen);\n  };\n\n  const handleSelect = sortBy => {\n    dispatch(setSortBy(sortBy));\n    setFilterOpen(false);\n  };\n\n  const sortedPsychologists = [...favorites].sort((a, b) => {\n    switch (sortBy) {\n      case 'name_asc':\n        return a.name.localeCompare(b.name);\n      case 'name_desc':\n        return b.name.localeCompare(a.name);\n      case 'price_high_low':\n        return b.price_per_hour - a.price_per_hour;\n      case 'price_low_high':\n        return a.price_per_hour - b.price_per_hour;\n      case 'popular':\n        return b.rating - a.rating;\n      case 'not_popular':\n        return a.rating - b.rating;\n      case 'all':\n      default:\n        return 0;\n    }\n  });\n\n  const handleAppoClick = psychologist => {\n    setSelectedPsychologist(psychologist);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedPsychologist(null);\n  };\n\n  return (\n    <div className=\"container\">\n      {favorites.length === 0 ? (\n        <NoFavorite>No favorite psychologists.</NoFavorite>\n      ) : (\n        <>\n          <Filter\n            isOpen={isFilterOpen}\n            onToggle={toggleFilter}\n            onSelect={handleSelect}\n          />\n          <PsychoStyledList>\n            {sortedPsychologists.map((psychologist, index) => (\n              <PsychoItem\n                key={index}\n                psychologist={psychologist}\n                onAppointmentClick={handleAppoClick}\n              />\n            ))}\n          </PsychoStyledList>\n        </>\n      )}\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <AppointmentForm\n            psychologist={selectedPsychologist}\n            onClose={closeModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { FavoritesList } from 'components/FavoritesList/FavoritesList';\n\nexport default function Favorites() {\n  return (\n    <section className=\"favorites\">\n      <FavoritesList />\n    </section>\n  );\n}\n"],"names":["NoFavorite","styled","_templateObject","_taggedTemplateLiteral","FavoritesList","dispatch","useDispatch","uid","useSelector","state","auth","favorites","items","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useState3","_useState4","selectedPsychologist","setSelectedPsychologist","sortBy","psychologists","_useState5","_useState6","isFilterOpen","setFilterOpen","useEffect","initializeFavorites","sortedPsychologists","_toConsumableArray","sort","a","b","name","localeCompare","price_per_hour","rating","handleAppoClick","psychologist","closeModal","_jsxs","className","children","length","_jsx","_Fragment","Filter","isOpen","onToggle","onSelect","setSortBy","PsychoStyledList","map","index","PsychoItem","onAppointmentClick","Modal","onClose","AppointmentForm","Favorites"],"sourceRoot":""}