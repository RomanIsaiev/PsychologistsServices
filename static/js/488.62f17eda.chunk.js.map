{"version":3,"file":"static/js/488.62f17eda.chunk.js","mappings":"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","sources":["components/Filter/Filter.js","components/PsychoItem/PsychoItem.js","components/PsychoList/PsychoList.js","pages/Psychologists.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSortBy } from '../../redux/psychologists/psychoReducer';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const sortBy = useSelector(state => state.psychologists.sortBy);\n\n  const handleSortChange = event => {\n    dispatch(setSortBy(event.target.value));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"sort\">Sort by: </label>\n      <select id=\"sort\" value={sortBy} onChange={handleSortChange}>\n        <option value=\"all\">Show All</option>\n        <option value=\"name_asc\">Name A-Z</option>\n        <option value=\"name_desc\">Name Z-A</option>\n        <option value=\"price_high_low\">Price High to Low</option>\n        <option value=\"price_low_high\">Price Low to High</option>\n        <option value=\"popular\">Popular</option>\n        <option value=\"not_popular\">Not Popular</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addFavorite,\n  removeFavorite,\n} from '../../redux/psychologists/favoriteReducer';\n\nexport const PsychoItem = ({ psychologist, index }) => {\n  const {\n    about,\n    avatar_url,\n    experience,\n    initial_consultation,\n    license,\n    name,\n    price_per_hour,\n    rating,\n    reviews,\n    specialization,\n  } = psychologist;\n\n  const IMAGE_BASE_URL = process.env.PUBLIC_URL + '/images';\n  const [expanded, setExpanded] = useState(false);\n  const favorites = useSelector(state => state.favorites.items);\n  const [isFavorite, setIsFavorite] = useState(\n    favorites.some(item => item.name === name)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsFavorite(favorites.some(item => item.name === name));\n  }, [favorites, name]);\n\n  const handleReadMore = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleFavoriteClick = () => {\n    if (isFavorite) {\n      dispatch(removeFavorite(psychologist));\n      setIsFavorite(false);\n    } else {\n      dispatch(addFavorite(psychologist));\n      setIsFavorite(true);\n    }\n  };\n\n  return (\n    <li>\n      <div>\n        <div>\n          <div>\n            <img\n              src={avatar_url}\n              width=\"96\"\n              height=\"96\"\n              alt=\"psychologistphoto\"\n            />\n          </div>\n        </div>\n        <div>\n          <span>Psychologist</span>\n          <h3>{name}</h3>\n          <ul>\n            <li>Experience: {experience}</li>\n            <li>License: {license}</li>\n            <li>Specialization: {specialization}</li>\n            <li>Initial consultation: {initial_consultation}</li>\n          </ul>\n          <p>{about}</p>\n        </div>\n        <div>\n          <div>\n            <img\n              src={`${IMAGE_BASE_URL}/svg/star.svg`}\n              alt=\"star\"\n              width=\"16\"\n              height=\"16\"\n            />\n            <p>Rating: {rating}</p>\n          </div>\n          <span>|</span>\n          <div>\n            <p>Price / 1 hour: {price_per_hour}$</p>\n          </div>\n          <div>\n            <button type=\"button\" onClick={handleFavoriteClick}>\n              {isFavorite ? (\n                <img\n                  src={`${IMAGE_BASE_URL}/svg/heart-fill.svg`}\n                  alt=\"star\"\n                  width=\"16\"\n                  height=\"16\"\n                />\n              ) : (\n                <img\n                  src={`${IMAGE_BASE_URL}/svg/heart-empty.svg`}\n                  alt=\"star\"\n                  width=\"16\"\n                  height=\"16\"\n                />\n              )}\n            </button>\n          </div>\n        </div>\n        {expanded && (\n          <div>\n            {reviews.map((review, reviewIndex) => (\n              <div key={reviewIndex}>\n                <div>\n                  <div>\n                    <div>{review.reviewer.slice(0, 1)}</div>\n                    <div>\n                      <p>{review.reviewer}</p>\n                      <div>\n                        <img\n                          src={`${IMAGE_BASE_URL}/svg/star.svg`}\n                          alt=\"star\"\n                          width=\"16\"\n                          height=\"16\"\n                        />\n                        <span>{review.rating}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <p>{review.comment}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        <button onClick={handleReadMore}>\n          {expanded ? 'Show Less' : 'Read More'}\n        </button>\n      </div>\n    </li>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchPsychologists,\n  loadMorePsychologists,\n} from '../../redux/psychologists/psychoReducer';\n\nimport { PsychoItem } from '../PsychoItem/PsychoItem';\nimport { ButtonRegister } from 'components/Header/Header.styled';\nimport Filter from 'components/Filter/Filter';\n\nexport const PsychoList = () => {\n  const dispatch = useDispatch();\n  const {\n    psychologists,\n    loadedPsychologists,\n    currentPage,\n    itemsPerPage,\n    status,\n    error,\n  } = useSelector(state => state.psychologists);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPsychologists());\n    }\n  }, [status, dispatch]);\n\n  const handleLoadMore = () => {\n    dispatch(loadMorePsychologists());\n  };\n\n  if (status === 'loading') {\n    return <div>Loading...</div>;\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <Filter />\n      <ul>\n        {psychologists.map((psychologist, index) => (\n          <PsychoItem key={index} psychologist={psychologist} index={index} />\n        ))}\n      </ul>\n      {currentPage * itemsPerPage < loadedPsychologists.length && (\n        <ButtonRegister onClick={handleLoadMore}>Load more</ButtonRegister>\n      )}\n    </div>\n  );\n};\n","import { PsychoList } from 'components/PsychoList/PsychoList';\n\nexport default function Psychologists() {\n  return (\n    <div>\n      <PsychoList />\n    </div>\n  );\n}\n"],"names":["dispatch","useDispatch","sortBy","useSelector","state","psychologists","_jsxs","children","_jsx","htmlFor","id","value","onChange","event","setSortBy","target","PsychoItem","_ref","psychologist","about","index","avatar_url","experience","initial_consultation","license","name","price_per_hour","rating","reviews","specialization","IMAGE_BASE_URL","process","_useState","useState","_useState2","_slicedToArray","expanded","setExpanded","favorites","items","_useState3","some","item","_useState4","isFavorite","setIsFavorite","useEffect","src","width","height","alt","concat","type","onClick","removeFavorite","addFavorite","map","review","reviewIndex","reviewer","slice","comment","PsychoList","_useSelector","loadedPsychologists","currentPage","itemsPerPage","status","error","fetchPsychologists","className","Filter","length","ButtonRegister","loadMorePsychologists","Psychologists"],"sourceRoot":""}