{"version":3,"file":"static/js/488.06c564a2.chunk.js","mappings":"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","sources":["components/PsychoList/PsychoList.js","pages/Psychologists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchPsychologists,\n  loadMorePsychologists,\n  setSortBy,\n} from '../../redux/psychologists/psychoReducer';\n\nimport { PsychoItem } from '../PsychoItem/PsychoItem';\nimport Filter from 'components/Filter/Filter';\nimport { LoadMoreBtn, LoaderContainer } from './PsychoList.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { AppointmentForm } from 'components/AppointmentForm/AppointmentForm';\nimport { PsychoStyledList } from 'components/PsychoItem/PsychoItem.styled';\nimport { DotLoader } from 'react-spinners';\n\nexport const PsychoList = () => {\n  const dispatch = useDispatch();\n  const {\n    psychologists,\n    loadedPsychologists,\n    currentPage,\n    itemsPerPage,\n    status,\n    error,\n  } = useSelector(state => state.psychologists);\n\n  const [isFilterOpen, setFilterOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedPsychologist, setSelectedPsychologist] = useState(null);\n  const sortBy = useSelector(state => state.psychologists.sortBy);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPsychologists());\n    }\n  }, [status, dispatch]);\n\n  const handleLoadMore = () => {\n    dispatch(loadMorePsychologists());\n  };\n\n  if (status === 'loading') {\n    return (\n      <LoaderContainer>\n        <DotLoader color=\"#FC832C\" loading />\n      </LoaderContainer>\n    );\n  }\n\n  if (status === 'failed') {\n    return <div>Error: {error}</div>;\n  }\n\n  const toggleFilter = () => {\n    setFilterOpen(!isFilterOpen);\n  };\n\n  const handleSelect = sortBy => {\n    dispatch(setSortBy(sortBy));\n    setFilterOpen(false);\n  };\n\n  const sortedPsychologists = [...psychologists].sort((a, b) => {\n    switch (sortBy) {\n      case 'name_asc':\n        return a.name.localeCompare(b.name);\n      case 'name_desc':\n        return b.name.localeCompare(a.name);\n      case 'price_high_low':\n        return b.price_per_hour - a.price_per_hour;\n      case 'price_low_high':\n        return a.price_per_hour - b.price_per_hour;\n      case 'popular':\n        return b.rating - a.rating;\n      case 'not_popular':\n        return a.rating - b.rating;\n      case 'all':\n      default:\n        return 0;\n    }\n  });\n\n  const handleAppoClick = psychologist => {\n    setSelectedPsychologist(psychologist);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedPsychologist(null);\n  };\n\n  return (\n    <div className=\"container\">\n      <Filter\n        isOpen={isFilterOpen}\n        onToggle={toggleFilter}\n        onSelect={handleSelect}\n      />\n      <PsychoStyledList>\n        {sortedPsychologists.map((psychologist, index) => (\n          <PsychoItem\n            key={index}\n            psychologist={psychologist}\n            onAppointmentClick={handleAppoClick}\n          />\n        ))}\n      </PsychoStyledList>\n      {currentPage * itemsPerPage < loadedPsychologists.length && (\n        <LoadMoreBtn onClick={handleLoadMore}>Load more</LoadMoreBtn>\n      )}\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <AppointmentForm\n            psychologist={selectedPsychologist}\n            onClose={closeModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { PsychoList } from 'components/PsychoList/PsychoList';\n\nexport default function Psychologists() {\n  return (\n    <section className=\"psychologists\">\n      <PsychoList />\n    </section>\n  );\n}\n"],"names":["PsychoList","dispatch","useDispatch","_useSelector","useSelector","state","psychologists","loadedPsychologists","currentPage","itemsPerPage","status","error","_useState","useState","_useState2","_slicedToArray","isFilterOpen","setFilterOpen","_useState3","_useState4","isModalOpen","setIsModalOpen","_useState5","_useState6","selectedPsychologist","setSelectedPsychologist","sortBy","useEffect","fetchPsychologists","_jsx","LoaderContainer","children","DotLoader","color","loading","_jsxs","sortedPsychologists","_toConsumableArray","sort","a","b","name","localeCompare","price_per_hour","rating","handleAppoClick","psychologist","closeModal","className","Filter","isOpen","onToggle","onSelect","setSortBy","PsychoStyledList","map","index","PsychoItem","onAppointmentClick","length","LoadMoreBtn","onClick","loadMorePsychologists","Modal","onClose","AppointmentForm","Psychologists"],"sourceRoot":""}